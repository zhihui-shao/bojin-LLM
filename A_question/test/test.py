import os
import openai

# openai.api_type = "azure"
# openai.api_base = "https://lechuang.openai.azure.com"
# openai.api_key = "bc709d6234e04a80ab2d744eb2434086"
# openai.api_version = "2023-05-15"
# deployment_name = 'lechuang-gpt-35-bak'
#
# prompt = ["The following is a conversation between two friends, John and Sarah.",
#           "John: Hi Sarah, how are you doing today?",
#           "Sarah: I'm doing great, thanks for asking. How about you?",
#           "John: I'm doing pretty well too. So, did you hear about the new restaurant that just opened up downtown?"]
#
# response = openai.Completion.create(
#     engine=deployment_name,
#     prompt=prompt,
#     max_tokens=50,
#     n=1,
#     stop=None,
#     temperature=0.5,
# )
#
# print(response.choices[0].text)

# 用LLM提取问题中的公司名称和关键字
import json
import requests


url = 'http://172.31.233.204:8000/v1/chat/completions'

question = "我想知道博时价值臻选两年持有期灵活配置混合C基金，在2021年年度报告中，前10大重仓股中，有多少只股票在报告期内取得正收益。"
sql = "SELECT COUNT(DISTINCT(\"股票代码\"))\nFROM \"A股票日行情表\"\nWHERE (SELECT \"昨收盘(元)\" FROM \"A股票日行情表\" WHERE \"交易日\" > 20210000 ORDER BY \"交易日\" LIMIT 1) \n< (SELECT \"收盘价(元)\" FROM \"A股票日行情表\" WHERE \"交易日\" < 20220000 ORDER BY \"交易日\" DESC LIMIT 1)\nAND \"股票代码\" IN (\n\tSELECT \"基金股票持仓明细\".\"股票代码\"\n\tFROM \"基金股票持仓明细\", \"A股票日行情表\"\n\tWHERE \"基金股票持仓明细\".\"基金简称\" = '博时价值臻选两年持有期灵活配置混合C'\n\tAND \"基金股票持仓明细\".\"股票代码\" = \"A股票日行情表\".\"股票代码\"\n\tAND \"基金股票持仓明细\".\"第N大重仓股\" <= 10\n);"

content = f'''
                    你是一名Mysql数据库开发人员，你精通Mysql数据库的sql代码编写，你需要根据已知的表名、字段名和用户输入问题以及sql代码来重写这条sql语句。
                    已知表名:
                    A股公司行业划分表 已知字段:[股票代码,交易日期,行业划分标准,一级行业名称,二级行业名称] 数据示例:[000065,20190115,中信行业分类,建筑,建筑施工Ⅱ]
                    A股票日行情表 已知字段:[股票代码,交易日,昨收盘(元),今开盘(元),最高价(元),最低价(元),收盘价(元),成交量(股),成交金额(元)] 数据示例:[603665,20190131,28.32,27.5,28.09,25.49,27.28,1757953,48247793]
                    港股票日行情表 已知字段:[股票代码,交易日,昨收盘(元),今开盘(元),最高价(元),最低价(元),收盘价(元),成交量(股),成交金额(元)] 数据示例:[47 HK,20190125,0.162,0.16,0.164,0.16,0.163,68000,10908]
                    基金份额持有人结构 已知字段:[基金代码,基金简称,公告日期,截止日期,机构投资者持有的基金份额,机构投资者持有的基金份额占总份额比例,个人投资者持有的基金份额,个人投资者持有的基金份额占总份额比例,定期报告所属年度,报告类型] 数据示例:[000006,西部利得量化成长混合A,2019-08-24 00:00:00,2019-06-30 00:00:00,10000600,7.24,128087037.15,92.76,2019,中期报告]
                    基金股票持仓明细 已知字段:[基金代码,基金简称,持仓日期,股票代码,股票名称,数量,市值,市值占基金资产净值比,第N大重仓股,所在证券市场,所属国家(地区),报告类型] 数据示例:[007484,信澳核心科技混合A,20201231,600563,法拉电子,151369,16279735.95,0.0257,4,上海证券交易所,中华人民共和国,季报]
                    基金规模变动表 已知字段:[基金代码,基金简称,公告日期,截止日期,报告期期初基金总份额,报告期基金总申购份额,报告期基金总赎回份额,报告期期末基金总份额,定期报告所属年度,报告类型] 数据示例:[000028,华富安鑫债券,2019-04-20 00:00:00,2019-03-31 00:00:00,344550555.65,1811778.99,18997687.33,327364647.31,2019,基金定期报告]
                    基金基本信息 已知字段:[基金代码,基金全称,基金简称,管理人,托管人,基金类型,成立日期,到期日期,管理费率,托管费率] 数据示例:[000006,西部利得量化成长混合型发起式证券投资基金A类,西部利得量化成长混合A,西部利得基金管理有限公司,中国农业银行股份有限公司,混合型,20190319,30001231,1.2%,0.1%]
                    基金可转债持仓明细 已知字段:[基金代码,基金简称,持仓日期,对应股票代码,债券名称,数量,市值,市值占基金资产净值比,第N大重仓股,所在证券市场,所属国家(地区),报告类型] 数据示例:[006650,招商安庆债券,20191231,300568,星源转债,1815,225989.4,0.0013,36,深圳证券交易所,中华人民共和国,季报]
                    基金日行情表 已知字段:[基金代码,交易日期,单位净值,复权单位净值,累计单位净值,资产净值] 数据示例:[007120,20210120,2.162,2.162,2.162,3282338328.05]
                    基金债券持仓明细 已知字段:[基金代码、基金简称、持仓日期、债券类型、债券名称、持债数量、持债市值、持债市值占基金资产净值比、第N大重仓股、所在证券市场、所属国家(地区)、报告类型] 数据示例:[010005,鹏扬现金通利货币E,20210331,超短期融资券,21华能水电SCP002,200000,20000180.24,0.0253,9,银行间市场,中华人民共和国,季报]

                    注意: sql代码必须是可以执行的，字段名必须是已知字段名，不得新增字段名；只需给出相应的sql语句，不要有任何额外的内容。
                    
                    ###
                    题目：{question}
                    sql代码：{sql}
                    ###
                '''

# 定义请求的JSON数据
data = {
    "model": "Tongyi-Finance-14B-Chat",
    "messages": [
        {
            "role": 'user',
            "content": content
        }
    ],
    "do_sample": True,
    "temperature": 0,
    "top_p": 0,
    "n": 1,
    "max_tokens": 8192,
    "stream": False
}

# 发送POST请求
sess = requests.Session()
response = sess.post(url, json=data, timeout=10 * 60)
# 检查响应状态码
if response.status_code == 200:
    # 解析响应JSON数据
    response_data = response.json()
    # 处理响应数据
    answer = response_data.get('choices')[0].get('message').get('content')

    print(answer)

else:
    print(f"请求失败，状态码: {response.status_code}")







